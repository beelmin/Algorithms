Data su dva stringa. Potrebno je prvi preuredit tako da postane isti kao drugi pri tome su dozvoljene 3 operacije nad prvim stringom. To su :
- umetnuti karakter u prvi string
- izbrisati karakter u prvom stringu
- zamijeniti karakter u prvom stringu

Naci minimalan broj operacija koji je potreban da prvi string postane isti kao drugi.

naivni rekurzivni algoritam je

#include <iostream>
#include <string>

using namespace std;

int Min(int a, int b, int c){
    return min(min(a,b),c);
}

int editString(string s1, string s2, int m, int n) {
    if(m == 0) {
        return n;
    }
    if(n == 0) {
        return m;
    }
    if(s1[m-1] == s2[n-1]){
        return editString(s1,s2,m-1,n-1);
    }

    return 1 + Min(editString(s1,s2,m,n-1), editString(s1,s2,m-1,n-1), editString(s1,s2,m-1,n));

}



int main()
{
    string s1 = "gesek";
    string s2 = "geek";
    cout << editString(s1,s2,s1.size(),s2.size());
    return 0;
}


vremenska kompleksnost :   najgori slucaj je O(3^m) 

imamo problem da se neki podproblemi ponavljaju i mi ih svaki put rjesavamo ponovo.
rjesenje je u dinamickom programiranju