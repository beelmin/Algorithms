Neusmjereni graf
Netezinski graf
Ispisuje samo duzinu najkrace udaljenosti od A do B 

#include <iostream>
#include <list>
#include <vector>
#include <queue>

using namespace std;

class Graf {
    int V;
    list<int> *lista;
    void BFS(int izvor, vector<int> &udaljenosti);
public:
    Graf(int V) {
        this->V = V;
        lista = new list<int> [V];
    }
    void DodajGranu(int u, int v) {
        lista[u].push_back(v);
        lista[v].push_back(u);
    }
    int NajkracaUdaljenost(int izvor, int odrediste);

};

void Graf::BFS(int izvor, vector<int> &udaljenosti) {
    queue<int> Q;
    Q.push(izvor);

    while(!Q.empty()) {
        int trenutni = Q.front();
        Q.pop();
        list<int>::iterator it;
        for(it = lista[trenutni].begin(); it != lista[trenutni].end(); it++) {
            if(udaljenosti[*it] == -1) {
                udaljenosti[*it] = udaljenosti[trenutni] + 1;
                Q.push(*it);
            }
        }
    }
}

int Graf::NajkracaUdaljenost(int izvor, int odrediste) {
    vector<int> udaljenosti(V,-1);
    udaljenosti[izvor] = 0;
    BFS(izvor,udaljenosti);
    return udaljenosti[odrediste];
}



int main(){

    Graf g(5);
    g.DodajGranu(0, 1);
    g.DodajGranu(0, 2);
    g.DodajGranu(1, 3);
    g.DodajGranu(1, 4);
    g.DodajGranu(4, 3);

    cout << g.NajkracaUdaljenost(3,0);

    return 0;
}

vremenska kompleksnost : O( V + E )