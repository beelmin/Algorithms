Neusmjereni graf
Ispisuje povezane komponente grafa

#include <iostream>
#include <list>
#include <vector>

using namespace std;

class Graf {
    int V;
    list<int> *lista;
    void DFS(int cvor, vector<bool> &posjecen);
public:
    Graf(int V) {
        this->V = V;
        lista = new list<int> [V];
    }
    void DodajGranu(int u, int v) {
        lista[u].push_back(v);
        lista[v].push_back(u);
    }
    void KomponentePovezanosti();
};

void Graf::DFS(int cvor, vector<bool> &posjecen) {
    posjecen[cvor] = true;
    cout << cvor << " ";
    list<int>::iterator it;
    for(it = lista[cvor].begin(); it != lista[cvor].end(); it++) {
        if(!posjecen[*it]){
            DFS(*it,posjecen);
        }
    }
}

void Graf::KomponentePovezanosti() {
    vector<bool> posjecen(V,false);
    for(int i = 0; i < V; i++) {
        if(!posjecen[i]){
            DFS(i,posjecen);
            cout << endl;
        }
    }
}


int main(){

    Graf g(5);
    g.DodajGranu(0, 1);
    g.DodajGranu(1, 2);
    g.DodajGranu(3, 4);

    g.KomponentePovezanosti();

    return 0;
}
 

vremenska kompleksnost : O( V + E)